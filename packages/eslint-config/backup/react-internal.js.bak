// const { resolve } = require('node:path');

// const project = resolve(process.cwd(), 'tsconfig.json');

/*
 * This is a custom ESLint configuration for use with
 * internal (bundled by their consumer) libraries
 * that utilize React.
 */

/** @type {import("eslint").Linter.Config} */
module.exports = {
    extends: [
        'eslint:recommended',
        'eslint-config-turbo',
        'prettier', // eslint-config-prettier prettier와 중복된 eslint 규칙 제거
        'airbnb',
        'airbnb-typescript',
        'plugin:@typescript-eslint/recommended', // ts 권장
        'plugin:prettier/recommended', // eslint의 포매팅을 prettier로 사용.
    ],
    plugins: ['only-warn', '@typescript-eslint', 'prettier'],
    parser: '@typescript-eslint/parser',
    globals: {
        React: true,
        JSX: true,
    },
    env: {
        browser: true,
    },
    settings: {
        'import/resolver': {
            typescript: {
                project: './tsconfig.json',
            },
        },
    },
    ignorePatterns: [
        // Ignore dotfiles
        '.*.js',
        'node_modules/',
        'dist/',
    ],
    rules: {
        // "@typescript-eslint/no-var-requires": "off",
        // react 17부터 import 하지 않아도 자동적용
        'react/react-in-jsx-scope': 'off',
        // jsx iteratee에서 key prop 누락 체크
        'react/jsx-key': 'error',
        // 경고표시, 파일 확장자를 .ts나 .tsx 모두 허용함
        'react/jsx-filename-extension': [
            'warn',
            { extensions: ['.ts', '.tsx'] },
        ],
        // export default 강제하지 않음
        'import/prefer-default-export': 'off',
        // 함수형 컴포넌트 사용으로 defaultProps 사용하지 않음
        'react/require-default-props': 'off',
        'import/extensions': ['off'],
        // prettier 에러를 eslint 레벨에서 활성화
        'prettier/prettier': ['error', { endOfLine: 'auto' }],
        // component 함수 작성법 제한
        'react/function-component-definition': [
            'error',
            {
                namedComponents: ['arrow-function', 'function-declaration'],
            },
        ],
        // props interface/type 사용으로 prop-types 검사는 사용하지 않음
        'react/prop-types': 'off',
        // JSX의 closing braket의 위치를 정렬된 위치로 설정
        'react/jsx-closing-bracket-location': ['error', 'line-aligned'],
        // 공통 컴포넌트의 props가 많을 경우 spread를 사용해 코드 단축을 이용할 수 있으므로 사용을 허용으로 설정
        // "react/jsx-props-no-spreading": [
        // 	"error",
        // 	{
        // 		"html": "ignore",
        // 		"custom": "ignore"
        // 	}
        // ]
    },
    overrides: [
        // Force ESLint to detect .tsx files
        { files: ['*.js?(x)', '*.ts?(x)'] },
    ],
};
